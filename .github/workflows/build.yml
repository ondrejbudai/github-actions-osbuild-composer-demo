name: Build images

on:
  push:
    branches: [main]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "README.md"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      osbuild-composer:
        image: registry.gitlab.com/cki-project/experimental/osbuild-example:latest
        volumes:
          - /builds:/builds
        options: --privileged
    container:
      image: registry.gitlab.com/cki-project/experimental/osbuild-example:latest
      volumes:
        - /builds:/builds
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run the build
        shell: bash
        run: |
          set -x
          sleep 10
          tail --follow --lines +1 "/builds/osbuild-composer-journal.txt" &
          composer-cli() { /usr/bin/composer-cli --socket /builds/weldr-api.socket "$@"; }
          composer-cli blueprints push installer.toml
          compose_id=$(composer-cli --json compose start installer image-installer | jq -r ".[].body.build_id")
          while [[ $(composer-cli --json compose info "${compose_id}" | jq -r ".[].body.queue_status") =~ RUNNING|WAITING ]]; do sleep 15; done
          
          # check whether the build succeeded
          [[ $(composer-cli --json compose info "${compose_id}" | jq -r ".[].body.queue_status") =~ FINISHED ]] || exit 1
          
          mkdir images
          composer-cli compose image "${compose_id}" --filename images/boot.iso

      - name: Upload image artifacts
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: images/boot.iso


